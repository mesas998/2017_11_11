{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Verdana;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 STIXGeneral-Regular;\f4\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red163\green75\blue10;\red255\green255\blue255;\red200\green20\blue201;
\red153\green153\blue153;\red47\green180\blue29;\red46\green174\blue187;\red111\green111\blue111;\red159\green160\blue28;
\red140\green135\blue234;\red180\green36\blue25;\red0\green0\blue0;}
\margl1011\margr1011\margb1445\margt1011\vieww14000\viewh16000\viewkind0\viewscale122
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs34 \cf0 \CocoaLigature0 7/7/2017:\
{\field{\*\fldinst{HYPERLINK "https://dashboard.heroku.com/apps/immense-temple-86427"}}{\fldrslt https://dashboard.heroku.com/apps/immense-temple-86427}}\
$ heroku run bash\
\
reverted to sqlite3\
added date to POC model\
migrated\
\
7/5/17:\
{\field{\*\fldinst{HYPERLINK "http://www.marinamele.com/2014/05/postgresql-on-heroku-and-the-pgbackup-add-on.html"}}{\fldrslt http://www.marinamele.com/2014/05/postgresql-on-heroku-and-the-pgbackup-add-on.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 $ heroku addons:add heroku-postgresql:dev\

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec2 $ heroku config | grep HEROKU_POSTGRESQL\
$ heroku addons\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\b \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 Add-on                                          
\f0\b0   
\f2\b Plan     
\f0\b0   
\f2\b Price
\f0\b0   
\f2\b State  
\f0\b0 \
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472   \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472   \u9472 \u9472 \u9472 \u9472 \u9472   \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
heroku-postgresql (\cf4 postgresql-aerodynamic-45251\cf0 )  hobby-dev  free   created\
 \cf5 \uc0\u9492 \u9472 \cf0  \cf5 as\cf0  \cf6 DATABASE\cf0 \
\
The table above shows \cf4 add-ons\cf0  and the \cf6 attachments\cf0  to the current app (immense-temple-86427) or other \cf7 apps\cf0 .\
$ heroku pg:info\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf8 === 
\f2\b \cf6 DATABASE_URL
\f0\b0 \cf0 \
Plan:        Hobby-dev\
Status:      Available\
Connections: 0/20\
PG Version:  9.6.1\
Created:     2017-07-03 21:48 UTC\
Data Size:   7.2 MB\
Tables:      0\
Rows:        0/10000 (In compliance)\
Fork/Follow: Unsupported\
Rollback:    Unsupported\
	Add-on:      \cf9 postgresql-aerodynamic-45251\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs34 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 $ heroku addons:add heroku-postgresql:hobby-basic\
\
Creating heroku-postgresql:hobby-basic on 
\f3 \cf10 \uc0\u11042 
\f0  immense-temple-86427\cf0 ... 
\f2\b \cf11 !
\f0\b0 \cf0 \
 \cf11 \uc0\u9656 \cf0     Please verify your account to install this add-on plan (please enter a credit card) For more information, see\
 \cf11 \uc0\u9656 \cf0     https://devcenter.heroku.com/categories/billing Verify now at {\field{\*\fldinst{HYPERLINK "https://heroku.com/verify"}}{\fldrslt https://heroku.com/verify}}\
\
heroku maintenance:on\
Enabling maintenance mode for 
\f3 \cf10 \uc0\u11042 
\f0  immense-temple-86427\cf0 ... done\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs34 \cf0 \
***\
7/4/2017\
\
\
was using (in settings.py)django.db.backends.sqlite3\
want to switch to django.db.backends.postgresql\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 $ pwd\
/Library/Python/3.4/site-packages/django/db/backends\
$ lq\
total 24\
-rw-r--r--   1 root  wheel     0 May 16 10:16 __init__.py\
drwxr-xr-x   5 root  wheel   170 May 16 10:16 __pycache__\
drwxr-xr-x  12 root  wheel   408 May 16 10:16 base\
drwxr-xr-x   6 root  wheel   204 May 16 10:16 dummy\
drwxr-xr-x  13 root  wheel   442 May 16 10:16 mysql\
drwxr-xr-x  14 root  wheel   476 May 16 10:16 oracle\
drwxr-xr-x  13 root  wheel   442 May 16 10:16 postgresql\
drwxr-xr-x  13 root  wheel   442 May 16 10:16 postgresql_psycopg2\
-rw-r--r--   1 root  wheel    95 May 16 10:16 signals.py\
drwxr-xr-x  11 root  wheel   374 May 16 10:16 sqlite3\
-rw-r--r--   1 root  wheel  7380 May 16 10:16 utils.py\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs34 \cf0 ({\field{\*\fldinst{HYPERLINK "https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-django-application-on-ubuntu-14-04"}}{\fldrslt https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-django-application-on-ubuntu-14-04}})\
$ fd\
$ 
\fs32 virtualenv myprojectenv\
Using base prefix '/Library/Frameworks/Python.framework/Versions/3.4'\
New python executable in /Users/michaelsweeney/epa7658577/myprojectenv/bin/python3.4\
Also creating executable in /Users/michaelsweeney/epa7658577/myprojecten\
to activate:\
$ source myprojectenv/bin/activate\
$
\fs34 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 settings.py I want to replace...\
'default': \{\
        'ENGINE': 'django.db.backends.sqlite3',\
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\
    \}\
...with...\
    'default': \{\
        #ENGINE': 'django.db.backends.postgresql',\
        #ENGINE': 'django.db.backends.postgresql_psycopg2',\
        'ENGINE': 'django.db.backends.mysql',\
        'NAME': 'mydatabase',\
        'USER': 'mydatabaseuser',\
        'PASSWORD': 'mypassword',\
        'HOST': '127.0.0.1',\
        'PORT': '5432',\
    \}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs34 \cf0 ***\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 $ pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start\
server starting\
$ ps -ef |grep postgres\
  501 81866 81864   0  2:30PM ??         0:00.00 postgres: checkpointer process     \
  501 81867 81864   0  2:30PM ??         0:00.01 postgres: writer process     \
  501 81868 81864   0  2:30PM ??         0:00.00 postgres: wal writer process     \
  501 81869 81864   0  2:30PM ??         0:00.00 postgres: autovacuum launcher process     \
  501 81870 81864   0  2:30PM ??         0:00.00 postgres: stats collector process     \
  501 81864     1   0  2:30PM ttys000    0:00.04 /usr/local/Cellar/postgresql/9.6.3/bin/postgres -D /usr/local/var/postgres\
  501 81872 81719   0  2:30PM ttys000    0:00.01 grep postgres\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs34 \cf0 \
(!)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs32 \cf0 $ createdb mydb\
(no reaction - that\'92s good)\
$ whoami\
michaelsweeney\
$ psql mydb\
psql (9.6.3)\
Type "help" for help.\
\
mydb=# \
\pard\pardeftab720

\f1\fs24 \cf12 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec12 That would mean you are a database superuser, which is most likely the case if you installed\'a0PostgreSQL\'a0yourself. Being a superuser means that you are not subject to access controls. For the purposes of this tutorial that is not important.\
(https://stackoverflow.com/questions/7975556/how-to-start-postgresql-server-on-mac-os-x looks helpful)
\f0\fs34 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 4:00 tutorial: htt	ps://www.postgresql.org/docs/9.0/static/tutorial-update.html\
***
\fs30 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
from nutr.models import *\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 poc=POC.objects.get(pk=8440)\
poc.name\
poc.image.name\
poc.image.name='Mohammad_Sanad.jpg'\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl360\slmult1\pardirnatural

\f4\fs24 \cf0 \CocoaLigature1 ***\
from nutr.models import *\
next = POC.objects.filter(pk__gt=8591)\
\
7/2/27 3 pm removed from poc_detail.html:\
<br>\
  <a href="\{% url 'nutr_poc_detail' pk=poc.get_previous.pk %\}">previous &laquo; </a>\
  <a href="\{% url 'nutr_poc_detail' pk=poc.get_next.pk %\}">next &raquo; </a>\
  \
\
***\
\
from nutr.forms import *\
pform = POCForm()\
pform.is_bound\
pform.is_valid()\
pocdata = \{'name':'Reeyot Alemu','slug':'reeyotalemu','link':'https://www.pambazuka.org/governance/shame-south-africa%E2%80%99s-black-political-prisoners'\}\
form=POCForm(pocdata)\
pform.is_bound\
pform.is_valid()\
True\
pform.cleaned_data\
\{'slug': 'reeyotalemu', 'name': 'Reeyot Alemu'\}\
>>> pform.errors\
\{\}\
>>> errordata = \{'name': None,'slug':'reeyotalemu','link':'https://www.pambazuka.org/governance/shame-south-africa%E2%80%99s-black-political-prisoners'\}\
>>> pform=POCForm(errordata)\
>>> pform.is_bound\
True\
>>> pform.is_valid()\
False\
>>> pform.cleaned_data\
\{'slug': 'reeyotalemu'\}\
>>> pform.errors\
\{'name': ['This field is required.']\}\
\
\
\
***\
7/2/17 9 am put back in poc_list.html:\
 <ul>\
            <li> <a href="\{\{ n.get_update_url \}\}"> Edit POC</a></li>\
            <li> <a href="\{\{ n.get_delete_url \}\}"> Delete POC</a></li>\
          </ul>\
***\
\
\
exec(open(\'91load_countries.py\'92).read())\
\
string = \'91  Zambia - xxxxxx\'92\
string = string.lstrip()\
dash = string.find('-')\
length=len(string)\
clone1 = string[:length-dash-4]\
\
(fix quotes)\
string = \'91Bahrain - xxxxxxxxx\'92\
dash = string.find('-')\
length=len(string)\
clone1 = string[:length-dash-4]\
clone1\
\
\
\
\
# Aster Fisselhatsion\'92s country is Eritrea\
from django.core.paginator import Paginator\
from nutr.models import *\
p=Paginator(Tag.objects.all(),5)\
p.__dict__\
import pprint\
pprint.pprint(p.__dict__)\
eritrea=Tag.objects.get(slug='eritrea')\
af=POC.objects.get(slug='asterfissehatsion')\
af.tag=eritrea\
af.save()\
POC.objects.get(pk=6316).name\
'Aster Fissehatsion'\
POC.objects.get(pk=6316).tag\
<Tag: Eritrea>\
***\
\
from nutr.models import *\
eritrea = Tag.objects.get(slug='eritrea')\
eritrea.poc_set.count()\
aster_fissehatsion=POC.objects.get(slug=\'91asterfissehatsion\'92)\
astre_fissehatsion.tags.count()\
aster_fissehatsion.tags.all()[0]\
\
(fix quotes)\
***\
Bird at St. Nicks:\
 https://www.youtube.com/watch?v=HmdRCut0X2Q\
\
from nutr.models import *\
poc=POC.objects.get(slug=\'91tranhuynhduythuc\'92)\
poc.name\
poc.slug\
poc.image.name\
\
***\
\
\
poc=POC.objects.get(pk=2279)\
>>> poc.name\
' Vi Duc Hoi[108]'\
>>> poc.slug\
'viduchoi'\
>>> poc.image.name='Vi_Duc_Hoi.jpg'\
>>> poc.save()\
# that works !!!\
***\
\
poc=POC.objects.get(pk=1273)\
(0.000) SELECT "nutr_poc"."id", "nutr_poc"."slug", "nutr_poc"."name", "nutr_poc"."image" FROM "nutr_poc" WHERE "nutr_poc"."id" = 1273; args=(1273,)\
>>> poc.name\
' Tr\uc0\u7847 n Hu\u7923 nh Duy Th\u7913 c[109]'\
>>> poc.slug\
'tr\uc0\u7847 nhu\u7923 nhduyth\u7913 c'\
\
***\
\
\
poc=POC.objects.get(pk=844)\
(0.000) SELECT "nutr_poc"."id", "nutr_poc"."slug", "nutr_poc"."name", "nutr_poc"."image" FROM "nutr_poc" WHERE "nutr_poc"."id" = 844; args=(844,)\
>>> poc.slug\
'tr\uc0\u7847 nhu\u7923 nhduyth\u7913 c'\
\
***\
\
how to run load_pc.py\
\
>>> exec(open(\'91load_poc.py\'92).read())\
\
>>> exec(open(\'91load_poc.py\'92).read())\
(fix quotes)\
\
\
\
!!!!\
poc.image.name='Liu_Xiaobo.jpg'\
poc.save()\
!!!!\
\{% load staticfiles %\}\
\{% load static %\}\
<html>\
<body>\
  <h2>h2 header</h2>\
        \{\{ poc.name \}\}\
        <img src="nutr/static/nutr/LiuXiaobo.jpg" >\
        <img src="\{% static 'LiuXiaobo.jpg' %\}">\
        <img src="\{% static poc.image.path %\}">\
        <img src="\{% static poc.image.name %\}">\
        <img src="\{\{ poc.image.url \}\}" class="img-responsive">\
        <img src="\{\{ poc.image.name \}\}" class="img-responsive">\
        <img src="nutr/static/nutr/LiuXiaobo.pdf" >\
        <img src="\{% static "nutr/LiuXiaobo.pdf" %\}">\
        <img src="\{% static poc.image.path %\}">\
        <img src="\{% static poc.image.name %\}">\
        <img src="\{\{ MEDIA_URL \}\} \{\{ Liu_Xiaobo.jpg \}\}">\
        <img src="\{\{ MEDIA_URL \}\} Liu_Xiaobo.jpg ">\
</body\
</html>\
!!!\
but we don\'92t know where its getting it:\
\
$ f | grep Li_Xiaobo.jpg\
./core/images/Liu_Xiaobo.jpg\
./core/Liu_Xiaobo.jpg\
./epa7658577/images/Liu_Xiaobo.jpg\
./epa7658577/Liu_Xiaobo.jpg\
./images/Liu_Xiaobo.jpg\
./Liu_Xiaobo.jpg\
./nutr/images/Liu_Xiaobo.jpg\
./nutr/Liu_Xiaobo.jpg\
./nutr/static/nutr/Liu_Xiaobo.jpg\
./nutr/templates/images/Liu_Xiaobo.jpg\
./nutr/templates/Liu_Xiaobo.jpg\
./nutr/templates/nutr/images/Liu_Xiaobo.jpg\
./nutr/templates/nutr/Liu_Xiaobo.jpg\
./static/images/Liu_Xiaobo.jpg\
./static/Liu_Xiaobo.jpg\
./static/site/images/Liu_Xiaobo.jpg\
./static/site/Liu_Xiaobo.jpg\
\
\'85whittled down to:\
\
./static/images/Liu_Xiaobo.jpg\
./static/Liu_Xiaobo.jpg\
./static/site/images/Liu_Xiaobo.jpg\
./static/site/Liu_Xiaobo.jpg\
\
\'85down to\'85\
$ f |grep Liu_Xiaobo.jpg\
./static/images/Liu_Xiaobo.jpg\
./static/Liu_Xiaobo.jpg\
\
\
\
\
5/24/17 	enter some NutData in shell\
		change addmod_date to date in NutData\
\
***\
shell:\
from nutr.models import NutData, NutrDef\
ndef1=NutrDef(nutr_no=210,units='g',tagname='SUCS',nutr_desc='Sucrose',num_dec=2) \
NutrDef.objects.get(pk=1).nutr_desc\
ndef1.save() #had to get rid of sr_order (?) ndata=NutData(nutr_no=ndef1,addmod_date='2017-01-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
ndata.save()\
\
from nutr.models import NutData, NutrDef\
ndef2=NutrDef(nutr_no=213,units='g',tagname='GLUS',nutr_desc='Glucose',num_dec=2) \
ndef2.save() #had to get rid of sr_order (?) ndata=NutData(nutr_no=ndef2,addmod_date='2008-05-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
ndata.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
from nutr.models import NutData, NutrDef\
ndef212=NutrDef(nutr_no=212,units='g',tagname='FRUS',nutr_desc='Fructose',num_dec=2) \
ndef212.save()\
data=NutData(nutr_no=ndef212,addmod_date='2009-02-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
data.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
from nutr.models import NutData, NutrDef\
ndef213=NutrDef(nutr_no=213,units='g',tagname='LACS',nutr_desc='Lactose',num_dec=2) \
ndef213.save()\
data=NutData(nutr_no=ndef213,addmod_date='2008-05-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
data.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
from nutr.models import NutData, NutrDef\
ndef214=NutrDef(nutr_no=214,units='g',tagname='MALS',nutr_desc='Maltose',num_dec=2) \
ndef214.save()\
data=NutData(nutr_no=ndef214,addmod_date='2009-02-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
data.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
from nutr.models import NutData, NutrDef\
ndef221=NutrDef(nutr_no=221,units='g',tagname='ALC',nutr_desc='Alcohol',num_dec=2) \
ndef221.save()\
data=NutData(nutr_no=ndef221,addmod_date='1985-04-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
data.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
from nutr.models import NutData, NutrDef\
ndef255=NutrDef(nutr_no=255,units='g',tagname='WATER',nutr_desc='Water',num_dec=2) \
ndef255.save()\
data=NutData(nutr_no=ndef255,addmod_date='2008-05-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
data.save()\
NutrDef.objects.count()\
NutData.objects.count()\
\
NutData.objects.get(pk=1).nutr_no.nutr_no #returns 210 (nutr_data is a foreign key in NutData pointing to nutr_data in NutrDef)\
NutData.objects.get(pk=2).nutr_no.nutr_no #returns 210\
\
>>> \
!!!\
~210~^~g~^~SUCS~^~Sucrose~^~2~^~1600~\
~211~^~g~^~GLUS~^~Glucose (dextrose)~^~2~^~1700~\
~212~^~g~^~FRUS~^~Fructose~^~2~^~1800~\
~213~^~g~^~LACS~^~Lactose~^~2~^~1900~\
~214~^~g~^~MALS~^~Maltose~^~2~^~2000~\
~221~^~g~^~ALC~^~Alcohol, ethyl~^~1~^~18200~\
~255~^~g~^~WATER~^~Water~^~2~^~100~\
class NutrDef(models.Model):\
    nutr_no = models.IntegerField(db_index=True)\
    units = models.CharField(max_length=7)\
    tagname = models.CharField(max_length=20)\
    nutr_desc = models.CharField(max_length=60)\
    num_dec = models.CharField(max_length=1)\
    sr_order = models.IntegerField()\
\
~01012~^~212~^0.00^3^0.000^~1~^~A~^~~^~~^1^^^^^^~~^02/2009^\
~01012~^~213~^2.67^3^0.520^~1~^~A~^~~^~~^1^^^^^^~~^05/2008^\
~01012~^~214~^0.00^3^0.000^~1~^~A~^~~^~~^1^^^^^^~~^02/2009^\
~01012~^~221~^0.0^0^^~7~^~~^~~^~~^^^^^^^~~^04/1985^\
~01012~^~255~^79.79^3^0.242^~1~^~A~^~~^~~^1^^^^^^~~^05/2008^\
\
class NutData(models.Model):\
    nutr_no = models.ForeignKey(NutrDef)\
    ndb_no = models.CharField(max_length=5)\
    nutr_val = models.DecimalField(max_digits=5,decimal_places=2)\
    num_data_pts = models.IntegerField()\
    std_error = models.DecimalField(max_digits=5,decimal_places=2)\
    src_cd = models.CharField(max_length=2)\
    deriv_cd = models.CharField(max_length=4)\
    ref_ndb_no = models.CharField(max_length=5)\
    add_nutr_mark = models.CharField(max_length=1)\
    num_studies = models.IntegerField()\
    min = models.DecimalField(max_digits=5,decimal_places=2)\
    max = models.DecimalField(max_digits=5,decimal_places=2)\
    df = models.IntegerField()\
    low_eb = models.DecimalField(max_digits=5,decimal_places=2)\
    up_eb = models.DecimalField(max_digits=5,decimal_places=2)\
    stat_cmt = models.CharField(max_length=10)\
    addmod_date = models.DateField()\
    cc = models.CharField(max_length=1)\
\
!!!\
(notice ndef1 foreign key)\
(complained about every field until only the foreign key ws left)\
ndata=NutData(nutr_no=ndef1)\
***\
example musician album\
https://stackoverflow.com/questions/7906317/instantiating-object-with-foreignkey-attribute-with-the-django-shell\
***\
!!!\
\
# Create your models here.\
!!!\
\
NutrDef:\
\
\
\
\
\
NutData:\
\
\
~01012~^~212~^0.00^3^0.000^~1~^~A~^~~^~~^1^^^^^^~~^02/2009^\
~01012~^~213~^2.67^3^0.520^~1~^~A~^~~^~~^1^^^^^^~~^05/2008^\
~01012~^~214~^0.00^3^0.000^~1~^~A~^~~^~~^1^^^^^^~~^02/2009^\
~01012~^~221~^0.0^0^^~7~^~~^~~^~~^^^^^^^~~^04/1985^\
~01012~^~255~^79.79^3^0.242^~1~^~A~^~~^~~^1^^^^^^~~^05/2008^\
class NutData(models.Model):\
    nutr_no = models.ForeignKey(NutrDef)\
    ndb_no = models.CharField(max_length=5)\
    nutr_val = models.DecimalField(max_digits=5,decimal_places=2)\
    num_data_pts = models.IntegerField()\
    std_error = models.DecimalField(max_digits=5,decimal_places=2)\
    src_cd = models.CharField(max_length=2)\
    deriv_cd = models.CharField(max_length=4)\
    ref_ndb_no = models.CharField(max_length=5)\
    add_nutr_mark = models.CharField(max_length=1)\
    num_studies = models.IntegerField()\
    min = models.DecimalField(max_digits=5,decimal_places=2)\
    max = models.DecimalField(max_digits=5,decimal_places=2)\
    df = models.IntegerField()\
    low_eb = models.DecimalField(max_digits=5,decimal_places=2)\
    up_eb = models.DecimalField(max_digits=5,decimal_places=2)\
    stat_cmt = models.CharField(max_length=10)\
    addmod_date = models.DateField()\
    cc = models.CharField(max_length=1)\
***\
>>> NutrDef.objects.count()\
7\
>>> NutrDef.objects.get(pk=1).nutr_no\
210\
>>> NutrDef.objects.get(pk=2).nutr_no\
211\
>>> NutrDef.objects.get(pk=3).nutr_no\
212\
>>> NutrDef.objects.get(pk=4).nutr_no\
213\
>>> NutrDef.objects.get(pk=5).nutr_no\
214\
>>> NutrDef.objects.get(pk=6).nutr_no\
221\
>>> NutrDef.objects.get(pk=7).nutr_no\
255\
***\
create 2 rows in NutData that point to NutrDef 210:\
>>> ndef1=NutrDef(nutr_no=210,units='g',tagname='SUCS',nutr_desc='Sucrose',num_dec=2) \
>>> ndef1.save()\
>>> ndata=NutData(nutr_no=ndef1,addmod_date='2017-01-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
>>> ndata.save()\
ndata=NutData(nutr_no=ndef1,addmod_date='2017-01-01',low_eb=1,max=10,min=1,num_data_pts=1,num_studies=1,nutr_val=1,std_error=1.0,up_eb=1)\
>>> ndata.save()\
>>> NutData.objects.count()\
\
\
2\
***\
(verify the 2 NutData rows point to 210 Nutr_def)\
>>> NutData.objects.all()[0].nutr_no.nutr_no\
210\
>>> NutData.objects.all()[1].nutr_no.nutr_no\
210\

{\*\beandata789c9d935d6f82301486aff157748db752d876b12d8851c1c4cc2099b86497153a65e32ba5cef1ef57444aeb66b68c1bda73fabe4f7b4e6b8d3ed3047c105ac6793684a66e4040b2308fe26c3b84eb6036b88323bb675d39cb69f0e2bba048e292017f3d59cca7000e101a17454210720207f88bf92a00dc0321d78300ee182b1e103a1c0e3aae57e9619ed60b4be4d3bc2094550b6e36e0023d6211e498c65dd90e8f4671c8ec9e66bd93caee631aee62bec242f594474b46f9666d6ff5482a128d45fa146f75f9e68d84ac14324c29ae07c2a09fed934492692d573b3984092e855e4e37f9e9acbf9e3b5d5eb3e28c912da1f6ad85dae1518854636fa5f39fec2cf6a6502e603aceb5ca5140a8f36ca16715f93ff7e64fdc2eda567ce28ebd27f6ead6f78d778ef1e866cf48f9dcf4dfdba71ba591d2490dd334ee0df5c03ff68b5c3a9fb8360e57711aa6958c92572c8f8552b2dfead9d0329c1289f70b4354a4736bbc585e887b2a8a56cf2704670e665830cece7cde24513053ad540756ded6e9e109b6501bf52759b43a0b1d5facddfb02aa1d4161}}