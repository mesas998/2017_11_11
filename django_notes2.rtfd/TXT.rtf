{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;}
\margl1011\margr1011\margb1445\margt1011\vieww14000\viewh16000\viewkind1\viewscale215
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fi722\sl288\slmult1\pardirnatural

\f0\fs24 \cf0 9/1/17 I asked this:\
***\
I want Azerbaijan to show up in the browser as as Azerba\'efdjan (French spelling).\
\
1) I placed the django_countries dir (downloaded from https://pypi.python.org/pypi/django-countries) in my project root.\
\
2) added "django_countries" to my INSTALLED_APPS\
\
3) added "from django.utils.translation import ugettext_lazy as _ " in my app1/forms.py\
\
4) changed the following (in the forms.ModelForm subclass):\
\
def clean_name(self):\
        return self.cleaned_data['name']\
   to:\
\
def clean_name(self):\
        return _(self.cleaned_data['name'])     \
\
5) changed the language preference in Chrome to French\
\
What am I missing? Thanks\
***\
I answered my own question:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fi722\sl288\slmult1\pardirnatural
\cf0 ***\
To circumvent the question police I'm posting this as a question.\
I muddled the question. The template is a list of countries. There's no form involved. \
Remove steps 3 and 4 above.\
Put \{% load i18n %\} at the top of your template (e.g. in country_list.html)\
Change \{\{ country.name \}\} in the html loop to \{% trans country.name %\},\
\
Works for Portuguese (e.g. Azerbaijan comes out Azerbaij\'e3o)\
\
Background for those who have aren't familiar with Django: my Model is for a simple table of countries in Postgres. The list view looks like:\
\
class CountryList(PageLinksMixin, ListView):\
    paginate_by = 300\
    model = Tag\
\
The html now looks like:\
\{% for  country in  country_list %\}\
...\
<td><a href="\{\{ country.get_absolute_url \}\}"> \{% trans country.name %\}</a></td>    \
...\
\{% endfor %\}\
***}{\*\beandata789c9d935d6f82301486aff157748db752d876b12d8851c1c4cc2099b86497153a65e32ba5cef1ef57444aeb66b68c1bda73fabe4f7b4e6b8d3ed3047c105ac6793684a66e4040b2308fe26c3b84eb6036b88323bb675d39cb69f0e2bba048e292017f3d59cca7000e101a17454210720207f88bf92a00dc0321d78300ee182b1e103a1c0e3aae57e9619ed60b4be4d3bc2094550b6e36e0023d6211e498c65dd90e8f4671c8ec9e66bd93caee631aee62bec242f594474b46f9666d6ff5482a128d45fa146f75f9e68d84ac14324c29ae07c2a09fed934492692d573b3984092e855e4e37f9e9acbf9e3b5d5eb3e28c912da1f6ad85dae1518854636fa5f39fec2cf6a6502e603aceb5ca5140a8f36ca16715f93ff7e64fdc2eda567ce28ebd27f6ead6f78d778ef1e866cf48f9dcf4dfdba71ba591d2490dd334ee0df5c03ff68b5c3a9fb8360e57711aa6958c92572c8f8552b2dfead9d0329c1289f70b4354a4736bbc585e887b2a8a56cf2704670e665830cece7cde24513053ad540756ded6e9e109b6501bf52759b43a0b1d5facddfb02aa1d4161}